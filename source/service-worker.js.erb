---
layout: false
directory_index: false
---
var cacheName = '<%= data.app.cache_version %>';

<% BLACK_LIST = /\.(keep|appcache|xml)|404/ %>
<% pages = sitemap.resources.reject{ |page| page.source_file.match(BLACK_LIST) || page.url == '/' } %>
var filesToCache = [
  '/index.html',
  '<%= data.styles.google_webfonts_url %>',
<% pages.each do |page| %>
  '<%= page.url %>',
<% end %>
];

// dev only
if (typeof filesToCache == 'undefined') {
  var filesToCache = [];
} else {
  filesToCache.push('./');
}

// install service worker
self.addEventListener('install', function(e) {
  console.log('[ServiceWorker] Install');
  e.waitUntil(
    caches.open(cacheName).then(function(cache) {
      console.log('[ServiceWorker] Caching stuff');
      return cache.addAll(filesToCache);
    })
  );
});

// activate service worker and create the cache
self.addEventListener('activate', function(e) {
  console.log('[ServiceWorker] Activate');
  e.waitUntil(
    caches.keys().then(function(keyList) {
      return Promise.all(keyList.map(function(key) {
        if (key !== cacheName) {
          console.log('[ServiceWorker] Removing old cache', key);
          return caches.delete(key);
        }
      }));
    })
  );
  return self.clients.claim();
});


// recover the cache
self.addEventListener('fetch', function(e) {
  console.log('[ServiceWorker] Fetch', e.request.url);
  e.respondWith(
    caches.match(e.request).then(function(response) {
      return response || fetch(e.request);
    })
  );
});

self.addEventListener('notificationclick', function(event) {
  console.log('On notification click: ', event);
  clients.openWindow('/');
});
